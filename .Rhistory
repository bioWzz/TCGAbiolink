library(TCGAbiolinks)
install.packages("gtools")
library(TCGAbiolinks)
query <- GDCquery(project = "TARGET-AML",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
workflow.type = "HTSeq - Counts")
View(query)
View(query)
query.exp.hg19 <- GDCquery(project = "TCGA-GBM",
data.category = "Gene expression",
data.type = "Gene expression quantification",
platform = "Illumina HiSeq",
file.type  = "normalized_results",
experimental.strategy = "RNA-Seq",
barcode = c("TCGA-14-0736-02A-01R-2005-01", "TCGA-06-0211-02A-02R-2005-01"),
legacy = TRUE)
View(query.exp.hg19)
View(query.exp.hg19)
query.exp.hg19$results
z=query.exp.hg19$results
z
z=as.dataframe(query.exp.hg19$results)
z=as.data.frame(query.exp.hg19$results)
View(z)
View(z)
z
View(z)
View(z)
z=query.exp.hg19$results
query <- GDCquery(project = "TCGA-OV",
data.category = "Raw microarray data",
data.type = "Raw intensities",
experimental.strategy = "Methylation array",
legacy = TRUE,
file.type = ".idat",
platform = "Illumina Human Methylation 450")
clin.query <- GDCquery(project = "TCGA-BLCA", data.category = "Clinical", barcode = "TCGA-FD-A5C0"
)
View(clin.query)
rm(list=ls())
library(TCGAbiolinks)
clin.query <- GDCquery(project = "TCGA-BLCA", data.category = "Clinical", barcode = "TCGA-FD-A5C0")
View(clin.query)
View(clin.query)
json  <- tryCatch(GDCdownload(clin.query),
error = function(e) GDCdownload(clin.query, method = "client"))
clinical.patient <- GDCprepare_clinic(clin.query, clinical.info = "patient")
View(clinical.patient)
View(clinical.patient)
clinical.patient.followup <- GDCprepare_clinic(clin.query, clinical.info = "follow_up")
clinical.index <- GDCquery_clinic("TCGA-BLCA")
View(clinical.index)
View(clinical.index)
View(clinical.patient.followup)
View(clinical.patient.followup)
query <- GDCquery(project = "TCGA-COAD",
data.category = "Clinical",
barcode = c("TCGA-RU-A8FL","TCGA-AA-3972"))
GDCdownload(query)
rm(list=ls())
query <- GDCquery(project = "TCGA-COAD",
data.category = "Clinical",
barcode = c("TCGA-RU-A8FL","TCGA-AA-3972"))
GDCdownload(query)
5899/7
query <- GDCquery(project = "TCGA-COAD",
data.category = "Clinical",
barcode = c("TCGA-RU-A8FL","TCGA-AA-3972"))
GDCdownload(query)
View(query)
View(query)
clinical <- GDCprepare_clinic(query, clinical.info = "patient")
clinical.drug <- GDCprepare_clinic(query, clinical.info = "drug")
clinical.radiation <- GDCprepare_clinic(query, clinical.info = "radiation")
clinical.admin <- GDCprepare_clinic(query, clinical.info = "admin")
View(clinical)
GDCdownload(query)
clinical.admin <- GDCprepare_clinic(query, clinical.info = "admin")
clinical.sample <- GDCprepare_clinic(query, clinical.info = "sample")
clinical.slide <- GDCprepare_clinic(query, clinical.info = "slide")
clinical.portion <- GDCprepare_clinic(query, clinical.info = "portion")
query <- GDCquery(project = "TCGA-COAD",
data.category = "Biospecimen",
barcode = c("TCGA-RU-A8FL","TCGA-AA-3972"))
GDCdownload(query)
clinical.admin <- GDCprepare_clinic(query, clinical.info = "admin")
clinical.sample <- GDCprepare_clinic(query, clinical.info = "sample")
clinical.slide <- GDCprepare_clinic(query, clinical.info = "slide")
library(TCGAbiolinks)
library(data.table)
install.packages("data.table")
install.packages("data.table")
clinical <- TCGAbiolinks:::getGDCprojects()$project_id %>%
regexPipes::grep("TCGA",value=T) %>%
sort %>%
plyr::alply(1,GDCquery_clinic, .progress = "text") %>%
rbindlist
readr::write_csv(clinical,path = paste0("all_clin_indexed.csv"))
clinical <- TCGAbiolinks:::getGDCprojects()$project_id %>%
regexPipes::grep("TCGA",value=T) %>%
sort %>%
plyr::alply(1,GDCquery_clinic, .progress = "text") %>%
rbindlist
readr::write_csv(clinical,path = paste0("all_clin_indexed.csv")
clinical <- TCGAbiolinks:::getGDCprojects()$project_id
regexPipes::grep("TCGA",value=T)
sort
plyr::alply(1,GDCquery_clinic, .progress = "text")
rbindlist
readr::write_csv(clinical,path = paste0("all_clin_indexed.csv"))
getclinical <- function(proj){
message(proj)
while(1){
result = tryCatch({
query <- GDCquery(project = proj, data.category = "Clinical")
GDCdownload(query)
clinical <- GDCprepare_clinic(query, clinical.info = "patient")
for(i in c("admin","radiation","follow_up","drug","new_tumor_event")){
message(i)
aux <- GDCprepare_clinic(query, clinical.info = i)
if(is.null(aux)) next
# add suffix manually if it already exists
replicated <- which(grep("bcr_patient_barcode",colnames(aux), value = T,invert = T) %in% colnames(clinical))
colnames(aux)[replicated] <- paste0(colnames(aux)[replicated],".",i)
if(!is.null(aux)) clinical <- merge(clinical,aux,by = "bcr_patient_barcode", all = TRUE)
}
readr::write_csv(clinical,path = paste0(proj,"_clinical_from_XML.csv")) # Save the clinical data into a csv file
return(clinical)
}, error = function(e) {
message(paste0("Error clinical: ", proj))
})
}
}
clinical <- TCGAbiolinks:::getGDCprojects()$project_id %>%
regexPipes::grep("TCGA",value=T) %>% sort %>%
plyr::alply(1,getclinical, .progress = "text") %>%
rbindlist(fill = TRUE) %>% setDF %>% subset(!duplicated(clinical))
# This code will get all clinical indexed data from TCGA
library(TCGAbiolinks)
library(data.table)
%>%
TCGAbiolinks::getGDCprojects()$project_id
TCGAbiolinks::getGDCprojects()$project_id %>%
；；；
regexPipes::grep("TCGA",value=T)
grep("TCGA",value=T)
clinical <- TCGAbiolinks::getGDCprojects()$project_id %>%
regexPipes::grep("TCGA",value=T) %>%
sort %>%
plyr::alply(1,GDCquery_clinic, .progress = "text") %>%
rbindlist
LGG_path_subtypes <- TCGAquery_subtype(tumor = "lgg")
View(LGG_path_subtypes)
View(LGG_path_subtypes)
LGG_path_subtypes <- TCGAquery_subtype(tumor = "brc")
LGG_path_subtypes <- TCGAquery_subtype(tumor = "brca")
View(LGG_path_subtypes)
View(LGG_path_subtypes)
LGG_path_subtypes <- TCGAquery_subtype(tumor = "acc")
View(LGG_path_subtypes)
LGG_path_subtypes <- TCGAquery_subtype(tumor = "coad")
View(LGG_path_subtypes)
LGG_path_subtypes <- TCGAquery_subtype(tumor = "gbm")
View(LGG_path_subtypes)
LGG_path_subtypes <- TCGAquery_subtype(tumor = "brca")
View(clinical.radiation)
View(LGG_path_subtypes)
alply(1,GDCquery_clinic, .progress = "text")
plyr::alply(1,GDCquery_clinic, .progress = "text")
query <- GDCquery(project = "TCGA-COAD",
data.category = "Clinical")
View(query)
View(query)
GDCdownload(query)
clinical.drug <- GDCprepare_clinic(query, clinical.info = "drug")
View(clinical.drug)
View(clinical.drug)
View(clinical.drug)
z+TCGAbiolinks:::getGDCprojects()$project_id
z=TCGAbiolinks:::getGDCprojects()$project_id
z[i]
z[1]
clinical <- GDCprepare_clinic(query, clinical.info = "ks")
query <- GDCquery(project = "TCGA-STAD",
data.category = "Clinical")
GDCdownload(query)
clin.query <- GDCquery(project = "TCGA-STAD", data.category = "Clinical")
json  <- tryCatch(GDCdownload(clin.query),
error = function(e) GDCdownload(clin.query, method = "client")
json  <- tryCatch(GDCdownload(clin.query),
error = function(e) GDCdownload(clin.query, method = "client"))
clin.query <- GDCquery(project = "TCGA-STAD", data.category = "Clinical")
json  <- tryCatch(GDCdownload(clin.query),
error = function(e) GDCdownload(clin.query, method = "client"))
clin.query <- GDCquery(project = "TCGA-BLCA", data.category = "Clinical", barcode = "TCGA-FD-A5C0")
json  <- tryCatch(GDCdownload(clin.query),
error = function(e) GDCdownload(clin.query, method = "client"))
rm(list=ls())
clin.query <- GDCquery(project = "TCGA-BLCA", data.category = "Clinical", barcode = "TCGA-FD-A5C0")
View(clin.query)
View(clin.query)
json  <- tryCatch(GDCdownload(clin.query), error = function(e) GDCdownload(clin.query, method = "client"))
clin.query <- GDCquery(project = "TCGA-BLCA", data.category = "Clinical", barcode = "TCGA-FD-A5C0")
json  <- tryCatch(GDCdownload(clin.query),
error = function(e) GDCdownload(clin.query, method = "client"))
clinical.patient <- GDCprepare_clinic(clin.query, clinical.info = "patient")
clinical.patient.followup <- GDCprepare_clinic(clin.query, clinical.info = "follow_up")
clinical.index <- GDCquery_clinic("TCGA-BLCA")
View(clinical.index)
View(clinical.index)
View(clinical.patient)
View(clinical.patient.followup)
View(clinical.index)
View(clinical.index)
rm(list=ls())
clin.query <- GDCquery(project = "TCGA-BLCA", data.category = "Clinical")
json<-tryCatch(GDCdownload(clin.query),
error = function(e) GDCdownload(clin.query, method = "client"))
clinical.patient <- GDCprepare_clinic(clin.query, clinical.info = "patient")
clinical.patient.followup <- GDCprepare_clinic(clin.query, clinical.info = "follow_up")
View(clinical.patient)
clinical.drug <- GDCprepare_clinic(query, clinical.info = "drug")
clinical.drug <- GDCprepare_clinic(clin.query, clinical.info = "drug")
View(clin.query)
View(clinical.drug)
clinical.drug <- GDCprepare_clinic(clin.query, clinical.info = "a")
clinical.patient <- GDCprepare_clinic(clin.query, clinical.info = "patient")
clinical.patient.followup <- GDCprepare_clinic(clin.query, clinical.info = "follow_up")
clinical.drug <- GDCprepare_clinic(clin.query, clinical.info = "drug")
clinical.admin <- GDCprepare_clinic(clin.query, clinical.info = "admin")
clinical.radiation <- GDCprepare_clinic(clin.query, clinical.info = "radiation")
clinical.stage_event <- GDCprepare_clinic(clin.query, clinical.info = "stage_event")
clinical.new_tumor_event <- GDCprepare_clinic(clin.query, clinical.info = "new_tumor_event")
View(clinical.new_tumor_event)
View(clinical.drug)
View(clinical.drug)
clin.query <- GDCquery(project = "TCGA-BRCA", data.category = "Clinical")
json<-tryCatch(GDCdownload(clin.query),
error = function(e) GDCdownload(clin.query, method = "client"))
clinical.patient <- GDCprepare_clinic(clin.query, clinical.info = "patient")
clinical.patient.followup <- GDCprepare_clinic(clin.query, clinical.info = "follow_up")
clinical.admin <- GDCprepare_clinic(clin.query, clinical.info = "admin")
clinical.radiation <- GDCprepare_clinic(clin.query, clinical.info = "radiation")
clinical.stage_event <- GDCprepare_clinic(clin.query, clinical.info = "stage_event")
clinical.new_tumor_event <- GDCprepare_clinic(clin.query, clinical.info = "new_tumor_event")
View(clinical.admin)
View(clinical.drug)
rm(list=ls())
clin.query <- GDCquery(project = "TCGA-BRCA", data.category = "Clinical")
json<-tryCatch(GDCdownload(clin.query),
error = function(e) GDCdownload(clin.query, method = "client"))
clinical.patient <- GDCprepare_clinic(clin.query, clinical.info = "patient")
clinical.patient.followup <- GDCprepare_clinic(clin.query, clinical.info = "follow_up")
clinical.admin <- GDCprepare_clinic(clin.query, clinical.info = "admin")
clinical.radiation <- GDCprepare_clinic(clin.query, clinical.info = "radiation")
clinical.stage_event <- GDCprepare_clinic(clin.query, clinical.info = "stage_event")
clinical.new_tumor_event <- GDCprepare_clinic(clin.query, clinical.info = "new_tumor_event")
clinical.patient <- GDCprepare_clinic(clin.query, clinical.info = "patient")
clinical.patient.followup <- GDCprepare_clinic(clin.query, clinical.info = "follow_ups")
clinical.drug <- GDCprepare_clinic(clin.query, clinical.info = "drugs")
clinical.patient.followup <- GDCprepare_clinic(clin.query, clinical.info = "follow_ups")
clinical.patient.followup <- GDCprepare_clinic(clin.query, clinical.info = "follow_up")
clinical.drug <- GDCprepare_clinic(clin.query, clinical.info = "drugs")
clinical.drug <- GDCprepare_clinic(clin.query, clinical.info = "drug")
clinical.admin <- GDCprepare_clinic(clin.query, clinical.info = "admin")
clinical.radiation <- GDCprepare_clinic(clin.query, clinical.info = "radiations")
clinical.radiation <- GDCprepare_clinic(clin.query, clinical.info = "radiation")
clinical.stage_event <- GDCprepare_clinic(clin.query, clinical.info = "stage_event")
clinical.new_tumor_event <- GDCprepare_clinic(clin.query, clinical.info = "new_tumor_events")
clinical.new_tumor_event <- GDCprepare_clinic(clin.query, clinical.info = "new_tumor_event")
clinical.patient.followup <- GDCprepare_clinic(clin.query, clinical.info = "follow_up")
?GDCprepare_clinic
clinical.all <- GDCprepare_clinic(clin.query)
View(clinical.drug)
View(clinical.new_tumor_event)
View(clinical.new_tumor_event)
View(clinical.radiation)
View(clinical.stage_event)
GBM_path_subtypes <- TCGAquery_subtype(tumor = "gbm")
library(TCGAbiolinks)
GBM_path_subtypes <- TCGAquery_subtype(tumor = "gbm")
View(GBM_path_subtypes)
View(GBM_path_subtypes)
GBM_path_subtypes <- TCGAquery_subtype(tumor = "brca")
View(GBM_path_subtypes)
View(GBM_path_subtypes)
View(clin.query)
View(clin.query)
View(clinical.patient)
View(clinical.patient)
View(clinical.drug)
